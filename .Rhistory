install.packages("swirl")
library(swirl)
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z * 2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
r <- c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
play()
list.files()
nxt()
play()
list.files()
nxt()
list.files()
?list.files()
?list.files
args(list.files)
old.dir <- getwd()
dir.create(file.path(getwd(),"testdir)
)
dir.create(file.path(getwd(),"testdir))
dir.create(file.path(getwd(),"testdir"))
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
list.files()
ls()
file.exist("mytest.R")
file.exists("mytest.R")
file.info("mytest.R")
play()
?file.rename
nxt()
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
dir.create("testdir2","testdir3")
dir.create("testdir2"/"testdir3",recursive = TRUE)
dir.create("testdir2/testdir3",recursive = TRUE)
unlink("testdir2")
unlink("testdir2", recursive = TRUE)
setwd(old.dir)
play()
?par
nxt()
unlink("testdir",recursive = TRUE)
q()
library(swirl)
swirl()
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample (c(y,z),100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_data)
sum(my_na)
play()
ls()
my_na
dim(my_na)
nxt()
my_data
play()
sum(is.na(my_data))
nxt()
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
c(x[3],x[5],[7])
c(x[3],x[5],x[7])
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2,10)]
vec <- c(foo=11,bar=2,norf = NA)
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector < 1:20
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix( data = 1:20, nrow = 4 , ncol = 5)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 = 7)
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5
== 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
q()
library(datasets)
data(mtcars)
mtcars
?absolute
?abs
tapply(mtcars$hp, mtcars$cyl, mean)
abs(tapply(mtcars$hp, mtcars$cyl, mean)[1]-tapply(mtcars$hp, mtcars$cyl, mean)[3])
setwd("~/Especializaciones/Data Science/2-R Programming/Rcodes")
source("makeVector.R")
source("cachemean.R")
makeVector(c(2,3,4,5,6))
makeVector(
)
demo()
setwd("~/")
setwd("C:\Users\raxon\ProgrammingAssignment2")
setwd("C:/Users/raxon/ProgrammingAssignment2")
ls()
files.list
files.list()
file.list()
?file
setwd("C:/Users/raxon/ProgrammingAssignment2")
